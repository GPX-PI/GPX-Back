name: "SonarCloud Coverage Analysis"
description: "Ejecuta tests, genera cobertura con JaCoCo y sube an√°lisis a SonarCloud"

steps:
  - name: "Verificar configuraci√≥n del proyecto"
    command: |
      echo "üîç Verificando configuraci√≥n de SonarCloud..."
      if (Test-Path "sonar-project.properties") {
        echo "‚úÖ Archivo sonar-project.properties encontrado"
        Get-Content "sonar-project.properties" | Select-String "sonar.organization|sonar.projectKey"
      } else {
        echo "‚ùå No se encontr√≥ sonar-project.properties"
        exit 1
      }
      
      if (Test-Path "pom.xml") {
        echo "‚úÖ Proyecto Maven detectado"
      } else {
        echo "‚ùå No se encontr√≥ pom.xml"
        exit 1
      }

  - name: "Ejecutar tests y generar cobertura"
    command: |
      echo "üß™ Ejecutando tests y generando reporte de cobertura..."
      if (Test-Path "mvnw.cmd") {
        .\mvnw.cmd clean test jacoco:report
      } elseif (Get-Command mvn -ErrorAction SilentlyContinue) {
        mvn clean test jacoco:report
      } else {
        echo "‚ùå No se encontr√≥ Maven o Maven Wrapper"
        exit 1
      }

  - name: "Verificar reporte de cobertura"
    command: |
      echo "üìä Verificando reporte de cobertura..."
      if (Test-Path "target/site/jacoco/jacoco.xml") {
        echo "‚úÖ Reporte de JaCoCo generado correctamente"
        $fileSize = (Get-Item "target/site/jacoco/jacoco.xml").Length
        echo "üìÅ Tama√±o del reporte: $fileSize bytes"
      } else {
        echo "‚ùå No se gener√≥ el reporte de cobertura"
        exit 1
      }

  - name: "Configurar variables de SonarCloud"
    command: |
      echo "‚öôÔ∏è Configurando variables de entorno..."
      
      # Verificar que las variables est√©n definidas
      if (-not $env:SONAR_TOKEN) {
        echo "‚ùå SONAR_TOKEN no est√° definido"
        echo "üí° Ejecuta: $env:SONAR_TOKEN='tu_token_aqui'"
        exit 1
      }
      
      if (-not $env:SONAR_ORGANIZATION) {
        echo "üìã SONAR_ORGANIZATION no definido, usando valor del archivo de propiedades"
      }
      
      if (-not $env:SONAR_PROJECT_KEY) {
        echo "üìã SONAR_PROJECT_KEY no definido, usando valor del archivo de propiedades"
      }
      
      echo "‚úÖ Variables configuradas"

  - name: "Ejecutar an√°lisis de SonarCloud"
    command: |
      echo "üöÄ Ejecutando an√°lisis de SonarCloud..."
      
      $sonarCmd = @(
        "sonar:sonar"
      )
      
      if ($env:SONAR_ORGANIZATION) {
        $sonarCmd += "-Dsonar.organization=$env:SONAR_ORGANIZATION"
      }
      
      if ($env:SONAR_PROJECT_KEY) {
        $sonarCmd += "-Dsonar.projectKey=$env:SONAR_PROJECT_KEY"
      }
      
      $sonarCmd += "-Dsonar.host.url=https://sonarcloud.io"
      
      if (Test-Path "mvnw.cmd") {
        & .\mvnw.cmd @sonarCmd
      } else {
        & mvn @sonarCmd
      }
      
      if ($LASTEXITCODE -eq 0) {
        echo "‚úÖ An√°lisis completado exitosamente"
        echo "üåê Revisa los resultados en SonarCloud"
      } else {
        echo "‚ùå Error en el an√°lisis de SonarCloud"
        exit 1
      }

  - name: "Mostrar resumen"
    command: |
      echo ""
      echo "üìà ===== RESUMEN DEL AN√ÅLISIS ====="
      echo "‚úÖ Tests ejecutados y cobertura generada"
      echo "‚úÖ An√°lisis subido a SonarCloud"
      echo ""
      echo "üîó Enlaces √∫tiles:"
      
      # Extraer informaci√≥n del archivo de propiedades
      $org = (Get-Content "sonar-project.properties" | Select-String "sonar.organization=" | ForEach-Object { $_.Line.Split('=')[1] })
      $projectKey = (Get-Content "sonar-project.properties" | Select-String "sonar.projectKey=" | ForEach-Object { $_.Line.Split('=')[1] })
      
      if ($org -and $projectKey) {
        echo "   Dashboard: https://sonarcloud.io/dashboard?id=$projectKey"
        echo "   Proyecto: https://sonarcloud.io/project/overview?id=$projectKey"
      }
      
      echo ""
      echo "üí° Tip: Guarda este workflow para futuros an√°lisis"

variables:
  SONAR_TOKEN:
    description: "Token de autenticaci√≥n de SonarCloud"
    required: true
    secret: true
  SONAR_ORGANIZATION:
    description: "Organizaci√≥n en SonarCloud (opcional si est√° en sonar-project.properties)"
    required: false
  SONAR_PROJECT_KEY:
    description: "Clave del proyecto en SonarCloud (opcional si est√° en sonar-project.properties)"
    required: false

